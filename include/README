;******************************************************************
;*
;* OBD interface queries, commands
;*
;* Codes from $00 to $3d: Regular queries, return the value of the
;* variables showed in obdTable located below,
;* see each variable definition... First value in table
;* correspond to obd query code $00, increases by 1
;* for each table value
;*
;* Codes from $3e to $3f: Converted to $3d, see that obd code
;*
;* Codes from $40 to $c9: Returns what is stored in that ram address
;*
;* Codes from $ca to $ca:: Erase all fault codes and returns $00 if
;* engine not rotating. If engine is rotating, all
;* actuators/injector commands are reset and $ff
;* is returned.
;*
;* Codes from $cb to $f0: Returns what is stored in that ram address
;*
;* Codes from $f1 to $fc: Injector/actuators commands, returns $ff if
;* successfull
;*
;* $f1: Activate boost control solenoid
;* $f2: Unused in code
;* $f3: Activate egr solemoid
;* $f4: Activate fuel pressure solenoid
;* $f5: Activate purge solenoid
;* $f6: Turn on fuel pump
;* $f7: Disable injector #6 (inoperative in code)
;* $f8: Disable injector #5 (inoperative in code)
;* $f9: Disable injector #4
;* $fa: Disable injector #3
;* $fb: Disable injector #2
;* $fc: Disable injector #1
;*
;* Codes from $f1 to $ff: Special queries
;*
;* $fd: Serial link test, returns $b5 (E931) or $b7 (E932)
;* $fe: resistor strapping low word from t_strap3
;* $ff: resistor strapping high word from t_strap3
;*
;******************************************************************


This directory is intended for project header files.

A header file is a file containing C declarations and macro definitions
to be shared between several project source files. You request the use of a
header file in your project source file (C, C++, etc) located in `src` folder
by including it, with the C preprocessing directive `#include'.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

Including a header file produces the same results as copying the header file
into each source file that needs it. Such copying would be time-consuming
and error-prone. With a header file, the related declarations appear
in only one place. If they need to be changed, they can be changed in one
place, and programs that include the header file will automatically use the
new version when next recompiled. The header file eliminates the labor of
finding and changing all the copies as well as the risk that a failure to
find one copy will result in inconsistencies within a program.

In C, the usual convention is to give header files names that end with `.h'.
It is most portable to use only letters, digits, dashes, and underscores in
header file names, and at most one dot.

Read more about using header files in official GCC documentation:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html
